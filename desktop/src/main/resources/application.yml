debug: true
logging:
  level:
    com.example: debug
server:
  port: 0
spring:
  application:
    name: Desktop Application
  autoconfigure:
    exclude: com.example.core.OpenBrowserAutoConfiguration,com.example.resource.client.ResourceServiceAutoConfiguration
  datasource:
    password: tiger
    url: jdbc:postgresql://localhost:5432/auth
    username: scott
  docker:
    compose:
      lifecycle-management: start_only
      file: ../docker-compose.yml
  #  security:
  #    oauth2:
  #      client:
  #        registration:
  #          desktop-client:
  #            provider: spring
  #            client-id: desktop-client
  #            client-secret: desktop-secret
  #            authorization-grant-type: authorization_code
  #            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
  #            scope:
  #              - openid
  #              - resources.read
  #            client-name: desktop-client
  #        provider:
  #          spring:
  #            issuer-uri: http://localhost:9000
  sql:
    init:
      continue-on-error: true
      mode: always
      schema-locations:
        - classpath*:/org/springframework/security/oauth2/client/oauth2-client-schema-postgres.sql
  threads:
    virtual:
      enabled: true