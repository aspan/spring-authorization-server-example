debug: true
server:
  address: 127.0.0.1
  port: 8084

logging:
  level:
    org.springframework.security: trace
    org.atmosphere: warn

spring:
  application:
    name: Hilla Application
  datasource:
    password: secret
    url: jdbc:postgresql://localhost:32768/exampledatabase
    username: exampleuser
  docker:
    compose:
      lifecycle-management: start_only
      file: ../docker-compose.yml
  mustache:
    check-template-location: false
  security:
    oauth2:
      client:
        registration:
          hilla-client:
            provider: spring
            client-id: hilla-client
            client-secret: hilla
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - resources.read
            client-name: hilla-client
        provider:
          spring:
            issuer-uri: http://localhost:9000
  sql:
    init:
      continue-on-error: true
      mode: always
      schema-locations:
        - classpath*:/org/springframework/security/oauth2/client/oauth2-client-schema-postgres.sql

example:
  client-registration-id: hilla-client
  resource-server-url: "http://127.0.0.1:8090"

vaadin:
  launch-browser: false
  allowed-packages: com.vaadin,org.vaadin,com.example.application

